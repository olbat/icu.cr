---
language: crystal
sudo: required

matrix:
  include:
  # Linux
  - os: linux
    dist: xenial
  - os: linux
    dist: bionic

  - os: linux
    dist: bionic
    install:
    before_script:
    env: GENERATE_LIB=1 # regenerate the binding
    script:
    - docker-compose build devel
    - docker-compose run --rm -u $UID devel sh -c
      "make clean
      && make
      && crystal tool format --check src spec bench
      && crystal spec
      && make benchmark"

  # macOS
  - os: osx
    osx_image: xcode11.2
  ## Fix: temporary disabled, bug to be investiagated on a macOS machine
  - os: osx
    osx_image: xcode11.2
    env: GENERATE_LIB=1 # regenerate the binding

  # publish the documentation on GitHub pages
  - os: linux
    stage: deploy
    install:
    script: crystal docs
    deploy:
      provider: pages
      local_dir: docs/
      target_branch: gh-pages
      github_token: $GITHUB_TOKEN
      skip_cleanup: true
      on:
        branch: master

  # triggers an image build (used with travis' cron jobs to build periodically)
  - stage: deploy
    os: linux
    before_install:
    script: >
      [ $TRAVIS_EVENT_TYPE != "cron" ] ||
      curl -H "Content-Type: application/json" --data '{"build": true}'
      -X POST https://registry.hub.docker.com/u/olbat/libgen/trigger/${DOCKER_TOKEN}/

install: |
  set -e
  set -x

  case $TRAVIS_OS_NAME in
  linux)
    sudo apt-get -qq update
    if [[ -n $GENERATE_LIB ]]; then
      sudo apt-get install -y llvm-3.8-dev libclang-3.8-dev
      # FIXME: ugly fix since the libclang-3.8-dev package is bugged
      sudo ln -s $(llvm-config-3.8 --libdir)/libclang.so /usr/lib/
    fi
    sudo apt-get install -y libicu-dev
    ;;
  osx)
    brew update

    if [[ -n $GENERATE_LIB ]]; then
      # install LLVM and Clang 4 (a libgen dependency)
      brew install llvm@4
      brew link --force --overwrite llvm@4
      # FIXME: the "libclang.dylib" shared object is manually added to the ld
      #        library path since the llvm the formula don't do it properly
      find $(brew --prefix llvm@4)/lib -type f -name "libclang.dylib" -exec ln -sf {} $(brew --prefix)/lib \; -quit
    fi

    # install or upgrade icu4c
    brew ls --versions icu4c && brew upgrade icu4c || brew install icu4c

    # make sure that ICU executables are added to the PATH
    # and that the shared objects files can be found by the linker
    export PATH="$(brew --prefix icu4c)/bin:$PATH"
    export DYLD_FALLBACK_LIBRARY_PATH="$(brew --prefix icu4c)/lib:$DYLD_FALLBACK_LIBRARY_PATH"
    export PKG_CONFIG_PATH="$(brew --prefix icu4c)/lib/pkgconfig:$PKG_CONFIG_PATH"

    ;;
  *)
    exit 1;;
  esac

  set +x

before_script:
- crystal run src/icu_info.cr -- --version # displays the version of ICU
- "[ -z $GENERATE_LIB ] || { make clean; make ;}"

script:
  crystal tool format --check src spec bench
  && crystal spec
  && make benchmark
